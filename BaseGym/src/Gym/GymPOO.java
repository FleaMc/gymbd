/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gym;

import static Gym.Clientes.labelImg;
import static Gym.RegistroEntrenamiento.jButton2;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mich
 */
public class GymPOO extends javax.swing.JFrame {

    private int tipo = 0;
    private String nom = "";

    public void setTipo(int tip) {
        this.tipo = tip;

    }

    public void setNom(String nomb) {
        this.nom = nomb;
    }

    public GymPOO() {
        initComponents();
        Connect();
        Usuarios();
        Helper hp = new Helper();
        System.out.println(nom);

        combo.setModel(hp.getvalues());

    }
    int nue;

    Connection con;
    PreparedStatement pst;

    public void Connect() {

        String connection = "jdbc:sqlserver://localhost:1433;databaseName=Gym;integratedSecurity=true";

        try {
            con = DriverManager.getConnection(connection);
        } catch (SQLException ex) {
            Logger.getLogger(GymPOO.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void Usuarios() {

        try {
            pst = con.prepareStatement("SELECT * FROM Clientes INNER JOIN Entrenamientos ON Entrenamientos.Entrenamiento=Clientes.Entrenamiento");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData RSM = rs.getMetaData();
            int c;
            c = RSM.getColumnCount();
            DefaultTableModel DF = (DefaultTableModel) jTable1.getModel();
            DF.setRowCount(0);

            while (rs.next()) {
                Vector v2 = new Vector();
                for (int i = 1; i <= c; i++) {
                    v2.add(rs.getString("Numero"));
                    v2.add(rs.getString("Nombre"));
                    v2.add(rs.getString("Telefono"));
                    v2.add(rs.getString("FechaIngreso"));
                    v2.add(rs.getString("Iniciomes"));
                    v2.add(rs.getString("Finmes"));
                    v2.add(rs.getString("Ruta_Foto"));
                    v2.add(rs.getString("Entrenamiento"));
                    v2.add(rs.getString("Horario"));
                    v2.add(rs.getString("Equipamiento"));

                }
                DF.addRow(v2);
            }

        } catch (SQLException ex) {
            Logger.getLogger(GymPOO.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNum = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtIngreso = new javax.swing.JTextField();
        bttnGuardar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        bttnEliminar = new javax.swing.JButton();
        bttnModificar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txtMes = new javax.swing.JTextField();
        bttnNombre = new javax.swing.JButton();
        bttnTel = new javax.swing.JButton();
        bttnNum = new javax.swing.JButton();
        combo = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        txtClean = new javax.swing.JButton();
        txtTip = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        vtipo = new javax.swing.JLabel();
        vfecha = new javax.swing.JLabel();
        bttnUsers = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        labImg = new javax.swing.JLabel();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 11)); // NOI18N
        jLabel1.setText("Gimnasio LOS MEJORES");

        jLabel2.setText("Registro de clientes");

        jLabel3.setText("Nombre");

        jLabel4.setText("Telefono");

        txtTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoActionPerformed(evt);
            }
        });

        jLabel5.setText("Numero:");

        jLabel6.setText("Ingreso");

        bttnGuardar.setBackground(new java.awt.Color(204, 255, 255));
        bttnGuardar.setText("Registrar nuevo");
        bttnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnGuardarActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 255, 204));
        jButton2.setText("Pagar MES");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        bttnEliminar.setBackground(new java.awt.Color(255, 102, 102));
        bttnEliminar.setText("Eliminar");
        bttnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnEliminarActionPerformed(evt);
            }
        });

        bttnModificar.setBackground(new java.awt.Color(255, 255, 153));
        bttnModificar.setText("Modificar");
        bttnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnModificarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Nombre", "Telefono", "Ingreso", "Inicio Mes", "Fin mes", "Ruta_Foto", "Entrenamiento", "Entrenamiento", "Horario", "Equipamiento"
            }
        ));
        jTable1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setMinWidth(0);
            jTable1.getColumnModel().getColumn(7).setMaxWidth(0);
            jTable1.getColumnModel().getColumn(8).setMinWidth(0);
            jTable1.getColumnModel().getColumn(8).setMaxWidth(0);
            jTable1.getColumnModel().getColumn(9).setMinWidth(0);
            jTable1.getColumnModel().getColumn(9).setMaxWidth(0);
            jTable1.getColumnModel().getColumn(10).setMinWidth(0);
            jTable1.getColumnModel().getColumn(10).setMaxWidth(0);
        }

        jLabel7.setText("Inicio mes que paga:");

        bttnNombre.setText("Nombre");
        bttnNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnNombreActionPerformed(evt);
            }
        });

        bttnTel.setText("Telefono");
        bttnTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnTelActionPerformed(evt);
            }
        });

        bttnNum.setText("Numero");
        bttnNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnNumActionPerformed(evt);
            }
        });

        combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboActionPerformed(evt);
            }
        });

        jLabel8.setText("Entrenamiento");

        jButton1.setText("Administrar Entrenamiento");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Datos del cliente");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txtClean.setText("Limpiar");
        txtClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCleanActionPerformed(evt);
            }
        });

        txtTip.setText("Nombre");

        jLabel9.setText("Fecha");

        vtipo.setText("jLabel10");

        vfecha.setText("jLabel11");

        bttnUsers.setText("Usuarios");
        bttnUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnUsersActionPerformed(evt);
            }
        });

        jButton4.setText("Carga Imagen");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labImg, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labImg, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bttnGuardar)
                    .addComponent(bttnNombre))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(bttnEliminar)
                        .addGap(28, 28, 28)
                        .addComponent(bttnModificar))
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 722, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTip)
                        .addGap(18, 18, 18)
                        .addComponent(vtipo)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(vfecha)
                        .addGap(54, 54, 54)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(txtClean)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(txtIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel2)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtTelefono))))
                        .addGap(77, 77, 77)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(40, 40, 40)
                                .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bttnUsers))
                        .addGap(175, 175, 175))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bttnTel)
                .addGap(44, 44, 44)
                .addComponent(bttnNum)
                .addGap(52, 52, 52)
                .addComponent(jButton1)
                .addGap(45, 45, 45)
                .addComponent(jButton3)
                .addGap(74, 74, 74))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTip)
                        .addComponent(jLabel9)
                        .addComponent(vtipo)
                        .addComponent(vfecha)
                        .addComponent(jLabel5)
                        .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)
                                .addGap(24, 24, 24)
                                .addComponent(txtIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(24, 24, 24))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(35, 35, 35)))
                                .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(72, 72, 72)
                        .addComponent(bttnUsers))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(txtClean)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bttnGuardar)
                            .addComponent(jButton2)
                            .addComponent(bttnEliminar)
                            .addComponent(bttnModificar))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bttnNombre)
                            .addComponent(jButton4))
                        .addContainerGap(81, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bttnTel)
                            .addComponent(bttnNum)
                            .addComponent(jButton1)
                            .addComponent(jButton3))
                        .addGap(67, 67, 67))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void OrdenNom() {
        DefaultTableModel clientes = (DefaultTableModel) jTable1.getModel();
        clientes.setRowCount(0);
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;
        try {

            ps = con.prepareStatement("SELECT * FROM clientes ORDER BY Nombre ");
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();
            while (rs.next()) {
                Object[] fila = new Object[columnas];
                for (int indice = 0; indice < columnas; indice++) {
                    fila[indice] = rs.getObject(indice + 1);
                }
                clientes.addRow(fila);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }

    private void OrdenNum() {
        DefaultTableModel DF = (DefaultTableModel) jTable1.getModel();
        DF.setRowCount(0);
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;
        try {
            ps = con.prepareStatement("SELECT * FROM Clientes ORDER BY Numero ");
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();
            while (rs.next()) {
                Object[] fila = new Object[columnas];
                for (int indice = 0; indice < columnas; indice++) {
                    fila[indice] = rs.getObject(indice + 1);
                }
                DF.addRow(fila);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }


    private void txtTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoActionPerformed

    private void jTable1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1AncestorAdded

    private void bttnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnGuardarActionPerformed
        String item = (String) combo.getSelectedItem();

        String Nombre = txtNombre.getText();
        String Telefono = txtTelefono.getText();
        LocalDate fechaactual = LocalDate.now();

        try {
            pst = con.prepareStatement("insert into Clientes(Nombre,Telefono,FechaIngreso,Entrenamiento)values(?,?,?,?)");
            pst.setString(1, Nombre);
            pst.setString(2, Telefono);
            pst.setString(3, "" + fechaactual);
            pst.setString(4, item);
            int k = pst.executeUpdate();

            if (k == 1) {
                JOptionPane.showMessageDialog(this, "Registro añadido");
                txtNombre.setText("");
                txtTelefono.setText("");
                txtNombre.requestFocus();
                Usuarios();

            } else {
                JOptionPane.showMessageDialog(this, "Error al guardar");
            }

        } catch (SQLException ex) {
            Logger.getLogger(GymPOO.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bttnGuardarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel d1 = (DefaultTableModel) jTable1.getModel();
        int SelectIndex = jTable1.getSelectedRow();
        labImg.setVisible(true);
        txtNombre.setText(d1.getValueAt(SelectIndex, 1).toString());
        txtTelefono.setText(d1.getValueAt(SelectIndex, 2).toString());
        txtIngreso.setText(d1.getValueAt(SelectIndex, 3).toString());
        txtNum.setText(d1.getValueAt(SelectIndex, 0).toString());
        String ruta = "";
         if (d1.getValueAt(SelectIndex, 6) != null) {
        ruta = (d1.getValueAt(SelectIndex, 6).toString());
         }else{
             
         }
        ImageIcon foto = new ImageIcon(ruta);

        if (ruta.equals("")) {
           labImg.setIcon(null);
        } else {
            labImg.setIcon(foto);
        }

        if (d1.getValueAt(SelectIndex, 4) != null) {
            try {
                txtMes.setText(d1.getValueAt(SelectIndex, 4).toString());
            } catch (Exception e) {

            }
        } else {
            txtMes.setText("");
        }

        bttnGuardar.setEnabled(false);
    }//GEN-LAST:event_jTable1MouseClicked


    private void bttnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnModificarActionPerformed
        {
            DefaultTableModel d1 = (DefaultTableModel) jTable1.getModel();
            int SelectIndex = jTable1.getSelectedRow();

            String id = d1.getValueAt(SelectIndex, 0).toString();

            String Nombre = txtNombre.getText();
            String Telefono = txtTelefono.getText();

            try {
                pst = con.prepareStatement("update Clientes set Nombre =? , Telefono = ? where Numero = ?");
                pst.setString(1, Nombre);
                pst.setString(2, Telefono);
                pst.setString(3, id);

                int k = pst.executeUpdate();

                if (k == 1) {
                    JOptionPane.showMessageDialog(this, "Registro actualizado");
                    txtNombre.setText("");
                    txtTelefono.setText("");
                    txtIngreso.setText("");
                    txtMes.setText("");
                    txtNum.setText("");
                    txtNombre.requestFocus();
                    Usuarios();
                    bttnGuardar.setEnabled(true);

                } else {
                    JOptionPane.showMessageDialog(this, "Error al guardar");
                }

            } catch (SQLException ex) {
                Logger.getLogger(GymPOO.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_bttnModificarActionPerformed

    private void bttnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnEliminarActionPerformed

        DefaultTableModel d1 = (DefaultTableModel) jTable1.getModel();
        int SelectIndex = jTable1.getSelectedRow();
        String id = d1.getValueAt(SelectIndex, 0).toString();

        try {
            pst = con.prepareStatement("delete from Clientes where Numero = ? ");

            pst.setString(1, id);

            int k = pst.executeUpdate();

            if (k == 1) {
                JOptionPane.showMessageDialog(this, "Registro eliminado");
                txtNombre.setText("");
                txtTelefono.setText("");
                txtIngreso.setText("");
                txtMes.setText("");
                txtNum.setText("");
                txtNombre.requestFocus();
                Usuarios();
                bttnGuardar.setEnabled(true);

            } else {
                JOptionPane.showMessageDialog(this, "Fallo");
            }

        } catch (SQLException ex) {
            Logger.getLogger(GymPOO.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bttnEliminarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String meses;
        Recibo pagor = new Recibo ();
        
        meses = JOptionPane.showInputDialog("¿Cuantos meses desea pagar?");
        int mes = Integer.parseInt(meses);
        int pago = 0;
        pago = mes * 30;
        DefaultTableModel d1 = (DefaultTableModel) jTable1.getModel();
        int SelectIndex = jTable1.getSelectedRow();
        LocalDate fechaactual = LocalDate.now();
        String id = d1.getValueAt(SelectIndex, 0).toString();
        String nombre = d1.getValueAt(SelectIndex, 1).toString();   
        try {
            pst = con.prepareStatement("update Clientes set Iniciomes =? , Finmes = ? where Numero = ?");
            if (d1.getValueAt(SelectIndex, 4) != null) {

                try {

                    String fecInc = d1.getValueAt(SelectIndex, 5).toString();
                    LocalDate fechaNue = LocalDate.parse(fecInc);
                    LocalDate f = fechaNue.plusDays(pago);
                    pst.setString(1, fecInc);
                    pst.setString(2, "" + f);
                    pst.setString(3, id);
                    pagor.setFechas("Fechas pagadas "+fecInc + " hasta " + f);
                } catch (Exception e) { 

                }
            } else {
//                  

                LocalDate f = fechaactual.plusDays(pago);
                pst = con.prepareStatement("update Clientes set Iniciomes =?,Finmes =? where Numero = ?");
                pst.setString(1, "" + fechaactual);
                pst.setString(2, "" + f);
                pst.setString(3, id);
                pagor.setFechas("Fechas pagadas "+fechaactual + " hasta " + f);

            }
            int k = pst.executeUpdate();

            if (k == 1) {
                pagor.setCliente(nombre);
                pagor.setPago(250);
                pagor.setCant(mes);
              
                pagor.datos();
                JOptionPane.showMessageDialog(this, "Registro actualizado");
                txtNombre.setText("");
                txtTelefono.setText("");
                txtNombre.requestFocus();
                Usuarios();
                bttnGuardar.setEnabled(true);

            } else {
                JOptionPane.showMessageDialog(this, "Error al guardar");
            }

        } catch (SQLException ex) {
            Logger.getLogger(GymPOO.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void bttnNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnNumActionPerformed
        OrdenNum();
    }//GEN-LAST:event_bttnNumActionPerformed

    private void bttnNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnNombreActionPerformed
        OrdenNom();
    }//GEN-LAST:event_bttnNombreActionPerformed

    private void bttnTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnTelActionPerformed
        OrdenTel();
    }//GEN-LAST:event_bttnTelActionPerformed

    private void comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboActionPerformed


    }//GEN-LAST:event_comboActionPerformed


    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Datos datos = new Datos();
        LocalDate fecha = LocalDate.now();
        datos.setVisible(true);
        GymPOO ce = new GymPOO();
        if (tipo == 1) {
            datos.txtTipo.setText("Administrador");
        } else {
            datos.txtTipo.setText("Secretaria");
        }
        datos.txtFec.setText("" + fecha);

        ce.setVisible(false);
        DefaultTableModel d1 = (DefaultTableModel) jTable1.getModel();
        int SelectIndex = jTable1.getSelectedRow();

        String Id = d1.getValueAt(SelectIndex, 0).toString();
        
        
        if (d1.getValueAt(SelectIndex, 7).toString().equals("null")) {

            Datos.txtEnt.setText("");
        } else {

            String Ent = d1.getValueAt(SelectIndex, 7).toString();
            Datos.txtEnt.setText(Ent);
        }

        Datos.txtId.setText(Id);
        Datos.txtNom.setText(txtNombre.getText());
        Datos.txtTel.setText(txtTelefono.getText());

        if (d1.getValueAt(SelectIndex, 4) == null) {
            Datos.txtIng.setText("");
            Datos.txtMes.setText("");
        } else {
            String ing, m;
            ing = d1.getValueAt(SelectIndex, 4).toString();
            m = d1.getValueAt(SelectIndex, 5).toString();
            Datos.txtIng.setText(ing);
            Datos.txtMes.setText(m);

        }
        if (d1.getValueAt(SelectIndex, 8) == null && d1.getValueAt(SelectIndex, 9) == null) {
            Datos.txtHor.setText("");
            Datos.txtEqp.setText("");
        } else {
            String hor, eqp;
            hor = d1.getValueAt(SelectIndex, 8).toString();
            eqp = d1.getValueAt(SelectIndex, 9).toString();
            Datos.txtHor.setText(hor);
            Datos.txtEqp.setText(eqp);

        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        RegistroEntrenamiento abrir = new RegistroEntrenamiento();
        LocalDate fecha = LocalDate.now();

        if (tipo == 2) {
            abrir.setVisible(true);
            abrir.bttnEnt.setVisible(false);
            abrir.jButton2.setVisible(false);
            abrir.bttnModificar.setVisible(false);
            abrir.txtTip.setText(nom);
            System.out.println(nom);
            abrir.txtFec.setText("" + fecha);
        } else {

            abrir.txtTip.setText(nom);
            abrir.txtFec.setText("" + fecha);

        }
        abrir.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCleanActionPerformed
        bttnGuardar.setEnabled(true);
        Usuarios();
        labImg.setVisible(false);
        txtNombre.setText("");
        txtTelefono.setText("");
        txtIngreso.setText("");
        txtMes.setText("");
    }//GEN-LAST:event_txtCleanActionPerformed

    private void bttnUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnUsersActionPerformed
        RegistroUsuarios open = new RegistroUsuarios();
        LocalDate fecha = LocalDate.now();
        if (tipo == 1) {
            open.txtTip.setText(nom);
        } else {
            open.txtTip.setText(nom);
            open.bttnEliminar.setVisible(false);
            open.bttnModificar.setVisible(false);
        }
        open.txtFec.setText("" + fecha);
        open.setVisible(true);


    }//GEN-LAST:event_bttnUsersActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        DefaultTableModel d1 = (DefaultTableModel) jTable1.getModel();
        int SelectIndex = jTable1.getSelectedRow();
        String id = d1.getValueAt(SelectIndex, 0).toString();
        JFileChooser jf = new JFileChooser();
      
        File arch = null;
        String archivo = "";
        int status = jf.showOpenDialog(null);// Da un entero
       int i = 0;
        if (status == JFileChooser.APPROVE_OPTION) {

            arch = jf.getSelectedFile();
            archivo = arch.toString();
            i=1;
// Si apretamos en cancelar o cerramos la ventana ocurrirá esto
        } else if (status == JFileChooser.CANCEL_OPTION) {

            JOptionPane.showMessageDialog(this, "No selecciono nada");
        }
        if(i==1){
        try {
            pst = con.prepareStatement("update Clientes set Ruta_Foto =? where Numero = ?");

            pst.setString(1, archivo);
            pst.setString(2, id);
            int k = pst.executeUpdate();

            if (k == 1) {
                JOptionPane.showMessageDialog(this, "Foto añadida");
                Usuarios();

            } else {
                JOptionPane.showMessageDialog(this, "Error al guardar");
            }

        } catch (SQLException ex) {
            Logger.getLogger(GymPOO.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
            
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    public void datos() {
        DefaultTableModel d1 = (DefaultTableModel) jTable1.getModel();
        int SelectIndex = jTable1.getSelectedRow();
        String c;
        c = d1.getValueAt(SelectIndex, 0).toString();

    }

    private void OrdenTel() {
        DefaultTableModel clientes = (DefaultTableModel) jTable1.getModel();
        clientes.setRowCount(0);
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;
        try {

            ps = con.prepareStatement("SELECT * FROM clientes ORDER BY Telefono ");
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();
            while (rs.next()) {
                Object[] fila = new Object[columnas];
                for (int indice = 0; indice < columnas; indice++) {
                    fila[indice] = rs.getObject(indice + 1);
                }
                clientes.addRow(fila);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }

    class Helper {

        public DefaultComboBoxModel getvalues() {
            DefaultComboBoxModel modelo = new DefaultComboBoxModel();

            PreparedStatement ps;
            ResultSet rs;

            try {

                ps = con.prepareStatement("SELECT Entrenamiento From Entrenamientos");
                rs = ps.executeQuery();

                while (rs.next()) {
                    modelo.addElement(rs.getString(1));

                }
            } catch (SQLException ex) {

            }
            return modelo;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GymPOO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GymPOO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GymPOO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GymPOO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(GymPOO.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(GymPOO.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(GymPOO.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(GymPOO.class.getName()).log(Level.SEVERE, null, ex);
                }

                new GymPOO().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton bttnEliminar;
    private javax.swing.JButton bttnGuardar;
    public static javax.swing.JButton bttnModificar;
    public static javax.swing.JButton bttnNombre;
    private javax.swing.JButton bttnNum;
    private javax.swing.JButton bttnTel;
    private javax.swing.JButton bttnUsers;
    public static javax.swing.JComboBox<String> combo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labImg;
    private javax.swing.JButton txtClean;
    private javax.swing.JTextField txtIngreso;
    private javax.swing.JTextField txtMes;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNum;
    private javax.swing.JTextField txtTelefono;
    public static javax.swing.JLabel txtTip;
    public static javax.swing.JLabel vfecha;
    public static javax.swing.JLabel vtipo;
    // End of variables declaration//GEN-END:variables
}
